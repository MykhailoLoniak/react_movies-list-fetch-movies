{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","Poster","alt","Title","Plot","href","concat","imdbID","MoviesList","movies","map","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","change","setChange","_useState3","_useState4","setQuery","_useState5","_useState6","setMovie","_useState7","_useState8","loading","setLoading","_useState9","_useState10","error","setError","useMemo","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","finish","stop","apply","arguments","_Fragment","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","onChange","inputValue","target","value","classNames","disabled","length","onClick","prevState","some","prevMovie","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0880cfa7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movie: MovieData\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={\n              (movie.Poster !== 'N/A')\n                ? movie.Poster\n                : 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            }\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.Plot}\n          <br />\n          <a href={`https://www.imdb.com/title/${movie.imdbID}`} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\nimport './MoviesList.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: MovieData[] | Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map((movie: Movie | MovieData) => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2778120';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useMemo, useState } from 'react';\n\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [change, setChange] = useState('');\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useMemo(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const response = await getMovie(query);\n\n        if (response) {\n          const json = await response;\n\n          if ('Response' in json\n            && json.Response === 'False'\n            && json.Error === 'Movie not found!') {\n            setError(true);\n          } else if ('Title' in json && 'imdbID' in json) {\n            const movieData: Movie = json;\n\n            setMovie(movieData);\n            setError(false);\n          } else {\n            setError(true);\n          }\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  const handliChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n\n    setChange(inputValue);\n    setError(false);\n  };\n\n  const handleSabmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setQuery(change);\n  };\n\n  const handleAddMovies = () => {\n    if (movie) {\n      setMovies((prevState: Movie[]) => {\n        const movieExists = prevState.some((prevMovie: Movie | MovieData) => (\n          'imdbID' in prevMovie && prevMovie.imdbID === movie.imdbID\n        ));\n\n        return movieExists ? prevState : [...prevState, movie];\n      });\n    }\n\n    setMovie(null);\n    setChange('');\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSabmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              onChange={handliChange}\n              value={change}\n            />\n          </div>\n\n          <p\n            className={classNames('help', { 'is-danger': error })}\n            data-cy=\"errorMessage\"\n          >\n            {\n              error && 'Can\\'t find a movie with such a title'\n            }\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames({\n                'button is-light': !loading,\n                'button is-light is-loading': loading,\n              })}\n              disabled={change.length === 0}\n            >\n              {!movie?.Title\n                ? 'Find a movie'\n                : 'Search a again'}\n            </button>\n          </div>\n\n          {movie?.Title && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovies}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie?.Title && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}